This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-03-10T03:59:41.572Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
.gitignore
app/globals.css
app/layout.tsx
app/page.tsx
eslint.config.mjs
next.config.ts
package.json
postcss.config.mjs
public/file.svg
public/globe.svg
public/next.svg
public/vercel.svg
public/window.svg
README.md
tailwind.config.ts
tsconfig.json

================================================================
Repository Files
================================================================

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

================
File: app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

/* From Uiverse.io by vinodjangid07 */ 
.Btn {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: 100px;
  height: 40px;
  border: none;
  padding: 0px 20px;
  background-color: rgb(168, 38, 255);
  color: white;
  font-weight: 500;
  cursor: pointer;
  border-radius: 10px;
  box-shadow: -5px 5px 0px rgb(140, 32, 212);
  transition-duration: .3s;
}

.Btn1 {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: 80px;
  height: 40px;
  border: none;
  padding: 0px 20px;
  background-color: rgb(243, 118, 118);
  color: white;
  font-weight: 500;
  cursor: pointer;
  border-radius: 10px;
  box-shadow: -5px 5px 0px rgb(249, 211, 211);
  transition-duration: .3s;
}

.Btn2 {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  width: 100px;
  height: 40px;
  border: none;
  padding: 0px 20px;
  background-color: rgb(0, 190, 98);
  color: white;
  font-weight: 500;
  cursor: pointer;
  border-radius: 10px;
  box-shadow: -5px 5px 0px rgb(166, 232, 201);
  transition-duration: .3s;
}

.Btn1:active {
  transform: translate(3px , 3px);
  transition-duration: .3s;
  box-shadow: 2px 2px 0px rgb(243, 118, 118);
}

.Btn2:active {
  transform: translate(3px , 3px);
  transition-duration: .3s;
  box-shadow: 2px 2px 0px rgb(0, 190, 98);
}

.Btn:active {
  transform: translate(3px , 3px);
  transition-duration: .3s;
  box-shadow: 2px 2px 0px rgb(140, 32, 212);
}

================
File: app/layout.tsx
================
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}

================
File: app/page.tsx
================
"use client";

import { useState } from "react";
import { FaGlobe, FaHome, FaEllipsisH, FaSearch } from 'react-icons/fa';
import Image from "next/image"; 
import equilateralImg from './assets/images/equilateral.png';
import isoscelesImg from './assets/images/isosceles.png';
import rightTriangleImg from './assets/images/right_triangle.png';
import scaleneImg from './assets/images/scalene.png';
import iconImg from './assets/images/Image_Icon.png'; // Import Image from next/image
import Swal from 'sweetalert2';

export default function Home() {
  // State สำหรับเก็บค่าด้านของสามเหลี่ยม
  const [sideA, setSideA] = useState<string>("");
  const [sideB, setSideB] = useState<string>("");
  const [sideC, setSideC] = useState<string>("");
  const [triangleType, setTriangleType] = useState<string>("");
  const [, setTriangleClass] = useState<string>("");
  const [language, setLanguage] = useState<"th" | "en">("th");
  const [perimeter, setPerimeter] = useState<number | null>(null);
  const [area, setArea] = useState<number | null>(null);
  
  const triangleImages = {
    equilateral: equilateralImg,
    isosceles: isoscelesImg,
    right: rightTriangleImg,
    scalene: scaleneImg,
    icon: iconImg
  };

  const isValidNumber = (value: string): boolean => {
    const regex = /^\d+(\.\d{1,2})?$/; // ตรวจสอบว่ามีทศนิยมไม่เกิน 2 ตำแหน่ง
    return regex.test(value) && parseFloat(value) > 0;
  };

  const calculateTriangle = () => {
    if (!isValidNumber(sideA) || !isValidNumber(sideB) || !isValidNumber(sideC)) {
      Swal.fire({
        icon: "error",
        title: language === "th" ? "ข้อผิดพลาด" : "Error",
        text: language === "th" 
          ? "กรุณากรอกตัวเลขที่มากกว่า 0 และมีทศนิยมไม่เกิน 2 ตำแหน่ง" 
          : "Please enter a number greater than 0 with up to 2 decimal places.",
      });
      return;
    }

    const a = parseFloat(sideA);
    const b = parseFloat(sideB);
    const c = parseFloat(sideC);

    if (a + b <= c || a + c <= b || b + c <= a) {
      Swal.fire({
        icon: "error",
        title: language === "th" ? "ข้อผิดพลาด" : "Error",
        text: language === "th" 
          ? "ด้านที่กรอกไม่สามารถเป็นสามเหลี่ยมได้" 
          : "The sides do not form a triangle.",
      });
      return;
    }

    let triangleClass = "";
    const calculatedPerimeter = a + b + c;
    let calculatedArea = 0;

    if (a === b && b === c) {
      setTriangleType("equilateral");
      triangleClass = "border-b-[100px] border-blue-500";
      calculatedArea = (Math.sqrt(3) / 4) * a * a;
    } else if (a === b || b === c || a === c) {
      setTriangleType("isosceles");
      triangleClass = "border-b-[100px] border-yellow-500";
      const s = (a + b + c) / 2;
      calculatedArea = Math.sqrt(s * (s - a) * (s - b) * (s - c));
    } else if (
      a * a + b * b === c * c ||
      a * a + c * c === b * b ||
      b * b + c * c === a * a
    ) {
      setTriangleType("right");
      triangleClass = "bg-green-500 w-[100px] h-[100px] clip-path-polygon";
      calculatedArea = 0.5 * a * b;
    } else {
      setTriangleType("scalene");
      triangleClass = "border-b-[100px] border-red-500";
      const s = (a + b + c) / 2;
      calculatedArea = Math.sqrt(s * (s - a) * (s - b) * (s - c));
    }

    setPerimeter(calculatedPerimeter);
    setArea(calculatedArea);
    setTriangleClass(triangleClass);
  };

  const resetInputs = () => {
    setSideA("");
    setSideB("");
    setSideC("");
    setTriangleType("");
    setTriangleClass("");
    setPerimeter(null);
    setArea(null);
  };

  const toggleLanguage = () => {
    setLanguage((prev) => (prev === "th" ? "en" : "th"));
  };

  return (
    <div className="flex bg-white h-screen w-screen">
      <div className="flex flex-col items-center justify-center h-full w-full md:w-1/2 bg-[#faede1]">
        <div className="flex items-center">
          <FaHome className="text-[#fe9f73] text-3xl mr-2" />
          <div className="flex items-center bg-[#fcc1a2] rounded-lg px-4 py-2">
            <FaSearch className="text-white text-xl mr-2 " />
            <input
              type="text"
              className="flex-grow bg-transparent outline-none text-white"
            />
          </div>
          <FaEllipsisH className="text-[#fe9f73] text-3xl ml-2" />
        </div>
        <h1 className="text-[80px] font-bold text-white">
          {language === "th" ? "สามเหลี่ยม" : "Triangle"}
        </h1>
        <div className="w-[400px] h-[250px] bg-white rounded-xl">
          <div className="m-4 p-2 flex flex-col items-center justify-center">
            {triangleType ? (
              <div className="text-center">
                <div className="mx-auto flex justify-center">
                  {triangleType === "equilateral" && (
                    <Image src={triangleImages.equilateral} alt="Equilateral Triangle" width={200} height={200} />
                  )}
                  {triangleType === "isosceles" && (
                    <Image src={triangleImages.isosceles} alt="Isosceles Triangle" width={200} height={200} />
                  )}
                  {triangleType === "right" && (
                    <Image src={triangleImages.right} alt="Right Triangle" width={200} height={200} />
                  )}
                  {triangleType === "scalene" && (
                    <Image src={triangleImages.scalene} alt="Scalene Triangle" width={200} height={200} />
                  )}
                </div>

                {/* Area and perimeter box below the image inside the white box */}
                {perimeter && area !== null && (
                  <div className="mt-4 p-4 bg-[#fe9f73] rounded-xl">
                    <p className="text-lg text-white">{language === "th" ? "ขนาด" : "Area"}: {area.toFixed(2)}</p>
                    <p className="text-lg text-white">{language === "th" ? "เส้นรอบรูป" : "Perimeter"}: {perimeter}</p>
                  </div>
                )}
              </div>
            ) : (
              // Show default equilateral triangle image before calculation
              <div className="text-center flex flex-col items-center justify-center">
                <Image src={triangleImages.icon} alt="Equilateral Triangle" width={200} height={200} />
              </div>
            )}
          </div>
        </div>

        <button
          className="flex flex-row items-center mt-24 px-2 py-2 bg-[#fe9f73] text-white rounded-full hover:bg-[#ff8952]"
          onClick={toggleLanguage}
        >
          <FaGlobe className="mr-2 text-3xl" /> {/* Add the icon here */}
          {language === "th" ? "ไทย" : "ENGLISH"}
        </button>
      </div>
      <div className="flex flex-col items-center justify-center h-full w-full md:w-1/2">
        <div className="flex flex-col items-center justify-center gap-4 w-3/4 md:w-1/2">
          <input
            type="number"
            value={sideA}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>
              setSideA(e.target.value)
            }
            placeholder={language === "th" ? "กรอกด้านที่ 1 ที่นี่ ..." : "type the side1 here ..."}
            className="p-2 bg-[#fec960] text-white rounded-lg placeholder-white text-center"
            step="0.01"  
          />
          <input
            type="number"
            value={sideB}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>
              setSideB(e.target.value)
            }
            placeholder={language === "th" ? "กรอกด้านที่ 2 ที่นี่ ..." : "type the side2 here ..."}
            className="p-2 bg-[#fe95b6] text-white rounded-lg placeholder-white text-center"
            step="0.01"  
          />
          <input
            type="number"
            value={sideC}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>
              setSideC(e.target.value)
            }
            placeholder={language === "th" ? "กรอกด้านที่ 3 ที่นี่ ..." : "type the side3 here ..."}
            className="p-2 bg-[#fe9f73] text-white rounded-lg placeholder-white text-center"
            step="0.01"  
          />

          <div className="flex gap-4 mt-6">
            <button
              className="Btn1 px-6 py-2 text-center text-white rounded-lg hover:bg-[#f55454]"
              onClick={resetInputs}
            >
              {language === "th" ? "รีเซ็ต" : "reset"}
            </button>
            <button
              className="Btn2 px-6 py-2 text-center text-white rounded-lg hover:bg-[#2c9968]"
              onClick={calculateTriangle}
            >
              {language === "th" ? "คำนวณ" : "calculate"}
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}

================
File: eslint.config.mjs
================
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
];

export default eslintConfig;

================
File: next.config.ts
================
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;

================
File: package.json
================
{
  "name": "triangle-program",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "next": "15.1.6",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-icons": "^5.4.0",
    "sweetalert2": "^11.15.10"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "15.1.6",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}

================
File: postcss.config.mjs
================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

================
File: public/file.svg
================
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>

================
File: public/globe.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>

================
File: public/next.svg
================
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>

================
File: public/vercel.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>

================
File: public/window.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>

================
File: README.md
================
# ระบบเว็บแอปพลิเคชันจำแนกประเภทสามเหลี่ยม

## วิธี Run Program
1. เปิด cmd ขึ้นมาแล้วเลือกตำแหน่ง folder ที่ต้องการติดตั้ง
2. ใช้คำสั่ง 
```bash
git clone https://github.com/DarkMerlin04/triangle-program.git [folder_name]
```
3. cd เข้าไปใน folder ที่ตั้งชื่อไว้ แล้วใช้คำสั่ง
```bash
npm install

npm run build

npm start
```
4. เปิด Browser แล้วพิมพ์ใน Url ว่า [http://localhost:3000](http://localhost:3000)

## จัดทำโดย
- เพชรไพริน พุฒซ้อน 64010627
- ภูมิ ไพรศรี 64010681 
- รวีโรจน์ โทแก้ว 64010718

================
File: tailwind.config.ts
================
import type { Config } from "tailwindcss";

export default {
  content: [
    "./pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./components/**/*.{js,ts,jsx,tsx,mdx}",
    "./app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        background: "var(--background)",
        foreground: "var(--foreground)",
      },
    },
  },
  plugins: [],
} satisfies Config;

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
